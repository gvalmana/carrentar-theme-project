name: CD/CD

on:
  push:
    branches: ["main"]

jobs:
    build-and-upload-docker-image:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: docker build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/carrentarthemeproject:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Docker Push
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/carrentarthemeproject:latest
    deploy:
      runs-on: ubuntu-latest
      needs: build-and-upload-docker-image
      steps:
        - name: Deploy to Coinhost
          uses: appleboy/ssh-action@master
          env:
            DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/carrentarthemeproject:latest
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            envs: DOCKER_IMAGE
            script: |
              echo "Download new version"
              docker pull $DOCKER_IMAGE
              echo "Stop current version"
              sleep 1
              API=$(docker ps -q -f name=carrentarthemeproject)
              if [! -z $API]
              then
                docker stop $API
                docker rm $API
              fi
                docker run -d --name carrentarthemeproject -p 8080:80 $DOCKER_IMAGE
        - name: Check Service on coinhost
          env:
            ENDPOINT: ${{ secrets.ENDPOINT }}
          run: |
            RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" ${$ENDPOINT})
            if [${RESPONSE} -ne "200"]
            then
              echo "Service unresponsive"
              exit 1
            fi
              echo "Success!"
